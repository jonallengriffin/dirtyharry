
/* generated javascript */
var skin = 'monobook';
var stylepath = 'http://images.uncyc.org/skins';

/* MediaWiki:Common.js */
/* ここに書いたスクリプトは全ての外装に反映されます */
/* ツール: [http://uncyclopedia.org/index.php?title=-&action=raw&smaxage=0&gen=js reload cache]*/

 // 外装変更 
 // 1) 新しい外装を追加するページ名と名前空間を正確に記入する．
 //    (記事名のスペースはアンダースコア(_)に置換)
 //    2つ目のパラメタはファイル名(MediaWiki:Skin/記事名.css の場合は省略可)
 //     ex.1 ("Name Space:Page Name": "")
 //     ex.2 ("Name Space:Page Name": "Name Space:Page Name.css")
 //         上記2例は等価である．別名の場合は以下のようにする
 //     ex.3 ("Name Space:Page Name": "Hoge.css")
 //
 // 2) MediaWiki:Skin/Name_Space:Page_Name.cssを作成し、新しいCSSを記入する.
 
 skin = {
    "Uncyclopedia:アンディクショナリー": "Dict.css",
    "Uncyclopedia:アンディクショナリー/あ行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/か行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/さ行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/た行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/な行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/は行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/ま行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/や行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/ら行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/わ行": "Dict.css",
    "Uncyclopedia:アンディクショナリー/ん": "Dict.css",
    "Uncyclopedia:アンディクショナリー/アルファベット": "Dict.css",
    "Uncyclopedia:アンディクショナリー/数字・記号": "Dict.css",
    "Uncyclopedia:今日の単語" : "Dict.css",
    "メインページ" : "Main Page.css",
    "UnNews:バ科ニュース" : "Main Page.css",
    "あああああああああ!": "Aaaa.css",
    "ニヒリズム": "Nihilism.css",
    "MediaWiki/Format_All": "Format All.css",
    "MediaWiki/メインページ": "Format All.css",
    "MediaWiki/Deleted": "Format All.css"
 //行の最後にコンマを入れること!!(最後の行を除く)
 }
 
 var skinName;
 if (skin[wgPageName] != undefined) {
    skinName = (skin[wgPageName].length > 0) ? skin[wgPageName] : wgPageName + '.css';
       document.write('<style type="text/css">/*<![CDATA[*/ @import "/index.php?title=MediaWiki:Skin/' + skinName + '&action=raw&ctype=text/css"; /*]]>*/</style>');
 }

 // 読み込み時のイベントに登録(スクリプト共有)
 function addLoadEvent(func) 
 {
    if (window.addEventListener) 
       window.addEventListener("load", func, false);
    else if (window.attachEvent) 
       window.attachEvent("onload", func);
 }

 // ============================================================ 
 // BEGIN Dynamic Navigation Bars (experimantal)
 // 元はドイツ語版ウィキペディアらしい
 /* アンサイクロペディアでの管理人: [[利用者:えふ氏]]<small>([[利用者‐会話:えふ氏|かく]]|[[特別:Contributions/えふ氏|みる]])</small> */
 
 // set up the words in your language
 var NavigationBarHide = '[隠す]';
 var NavigationBarShow = '[表示]';
 
 // set up max count of Navigation Bars on page,
 // if there are more, all will be hidden
 // NavigationBarShowDefault = 0; // all bars will be hidden
 // NavigationBarShowDefault = 1; // on pages with more than 1 bar all bars will be hidden
 var NavigationBarShowDefault = 0;
 
 
 // shows and hides content and picture (if available) of navigation bars
 // Parameters:
 //     indexNavigationBar: the index of navigation bar to be toggled
 function toggleNavigationBar(indexNavigationBar)
 {
    var NavToggle = document.getElementById("NavToggle" + indexNavigationBar);
    var NavFrame = document.getElementById("NavFrame" + indexNavigationBar);
 
    if (!NavFrame || !NavToggle) {
        return false;
    }
 
    // if shown now
    if (NavToggle.firstChild.data == NavigationBarHide) {
        for (
                var NavChild = NavFrame.firstChild;
                NavChild != null;
                NavChild = NavChild.nextSibling
            ) {
            if (NavChild.className.match(/\bNavPic\b/) ) {
                NavChild.style.display = 'none';
            }
            if (NavChild.className.match(/\bNavContent\b/) ) {
                NavChild.style.display = 'none';
            }
        }
    NavToggle.firstChild.data = NavigationBarShow;
 
    // if hidden now
    } else if (NavToggle.firstChild.data == NavigationBarShow) {
        for (
                var NavChild = NavFrame.firstChild;
                NavChild != null;
                NavChild = NavChild.nextSibling
            ) {
            if (NavChild.className.match(/\bNavPic\b/)) {
                NavChild.style.display = 'block';
            }
            if (NavChild.className.match(/\bNavContent\b/)) {
                NavChild.style.display = 'block';
            }
        }
    NavToggle.firstChild.data = NavigationBarHide;
    }
 }
 
 // adds show/hide-button to navigation bars
 function createNavigationBarToggleButton()
 {
    var indexNavigationBar = 0;
    // iterate over all < div >-elements
    for(
            var i=0; 
            NavFrame = document.getElementsByTagName("div")[i]; 
            i++
        ) {
        // if found a navigation bar
        if (NavFrame.className.match(/\bNavFrame\b/)) {
 
            indexNavigationBar++;
            var NavToggle = document.createElement("a");
            NavToggle.className = 'NavToggle';
            NavToggle.setAttribute('id', 'NavToggle' + indexNavigationBar);
            NavToggle.setAttribute('href', 'javascript:toggleNavigationBar(' + indexNavigationBar + ');');
            
            var NavToggleText = document.createTextNode(NavigationBarHide);
            NavToggle.appendChild(NavToggleText);
            // Find the NavHead and attach the toggle link (Must be this complicated because Moz's firstChild handling is borked)
            for(
              var j=0; 
              j < NavFrame.childNodes.length; 
              j++
            ) {
              if (NavFrame.childNodes[j].className.match(/\bNavHead\b/) ) {
                NavFrame.childNodes[j].appendChild(NavToggle);
              }
            }
            NavFrame.setAttribute('id', 'NavFrame' + indexNavigationBar);
        }
    }
    // if more Navigation Bars found than Default: hide all
    if (NavigationBarShowDefault < indexNavigationBar) {
        for(
                var i=1; 
                i<=indexNavigationBar; 
                i++
        ) {
            toggleNavigationBar(i);
        }
    }
 
 }
 
 addOnloadHook(createNavigationBarToggleButton);
 
 // END Dynamic Navigation Bars
 // ============================================================


  // ([[:en:MediaWiki:Common.js]]より輸入)
  /** Username replace function ([[template:USERNAME]]) *******************************
  * Inserts user name into <span id="insertusername"></span>
  * By [[wikia:User:Splarka|Splarka]] 
  */
 addOnloadHook(UserNameReplace);
 
  function UserNameReplace() {
  if(typeof(disableUsernameReplace) != 'undefined' && disableUsernameReplace) return;
     for(var i=0; UserName = document.getElementsByTagName("span")[i]; i++) {
         if ((document.getElementById('pt-userpage'))&&(UserName.getAttribute('id') == "insertusername")) {
             UserName.innerHTML = wgUserName;
         }
     }
  }

/* MediaWiki:Monobook.js (deprecated; migrate to Common.js!) */
/* こちらは廃止されました; [[MediaWiki:Common.js]]をお使いください */